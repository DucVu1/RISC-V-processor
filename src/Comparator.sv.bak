module comparator#(parameter N = 32)(
	input logic [N-1:0] A, B,
	output logic less_than
);
logic [N-2:0] less_than_buffer;
generate 
	genvar i ;
		for (i = 0; i < N  - 1; i = i + 1) begin : check_input
			assign less_than_buffer[i] = ~A[i] & B[i];
			end
endgenerate
always_comb begin 
	if(A[N-1] & ~B[N-1])
		less_than = 1'b1;
	else if(~A[N-1] & B[N-1])
		less_than = 1'b0;
	else if(A[N-1] & B[N-1])
		less_than = ~(|less_than_buffer);
	else
		less_than = |less_than_buffer; // do not use this case since it two unsigned number
	end
endmodule
